;;; html-entities.el
;;; Provides an alist that maps Unicode characters to their
;;; corresponding HTML entity names, and some simple functions to
;;; convert between the two in a buffer (using replace-string).

(require 'cl)

;; Anything that's in ASCII and has an escape for the convenience of
;; HTML—i.e. the ampersand, greater-than, less-than, and straight
;; double quote—is commented out of the list so we don't deface the
;; HTML by using the replace functions below.
(setq html-ent-alist '(
		("∀" "forall")
		("∂" "part")
		("∃" "exist")
		("∅" "empty")
		("∇" "nabla")
		("∈" "isin")
		(" " "thinsp")
		("∋" "ni")
		("‌" "zwnj")
		("‍" "zwj")
		("‎" "lrm")
		("‏" "rlm")
		("∑" "sum")
		("−" "minus")
		(" " "emsp")
		("—" "mdash")
		("∗" "lowast")
		("‘" "lsquo")
		("’" "rsquo")
		("‚" "sbquo")
		("“" "ldquo")
		("”" "rdquo")
		("∞" "infin")
		("∠" "ang")
		("‡" "Dagger")
;;		("\"" "quot")
;;		("&" "amp")
		("∧" "and")
		("∨" "or")
		("∩" "cap")
		("∪" "cup")
		("∫" "int")
		("‰" "permil")
		("′" "prime")
		("″" "Prime")
		("∴" "there4")
		("∉" "notin")
		("‹" "lsaquo")
		("›" "rsaquo")
		("∼" "sim")
;;		(">" "gt")
		("↵" "crarr")
		("♠" "spades")
		("⁄" "frasl")
		("≅" "cong")
		("≈" "asymp")
		("∏" "prod")
		("≥" "ge")
		("≠" "ne")
		("≡" "equiv")
		("♣" "clubs")
		("≤" "le")
		("♥" "hearts")
		("♦" "diams")
		("–" "ndash")
		("∝" "prop")
		("⊂" "sub")
		("⊃" "sup")
		("⊄" "nsub")
		("⊆" "sube")
		("⊇" "supe")
		("„" "bdquo")
		("⊕" "oplus")
		("⊗" "otimes")
		("√" "radic")
		("Å" "Aring")
		(" " "nbsp")
		("¡" "iexcl")
		("¢" "cent")
		("£" "pound")
		("¤" "curren")
		("⊥" "perp")
		("¦" "brvbar")
		("§" "sect")
		("¨" "uml")
		("©" "copy")
		("ª" "ordf")
		("«" "laquo")
		("€" "euro")
		("­" "shy")
		("®" "reg")
		("¯" "macr")
		("°" "deg")
		("±" "plusmn")
		("²" "sup2")
		("³" "sup3")
		("´" "acute")
		("µ" "micro")
		("¶" "para")
		("·" "middot")
		("¸" "cedil")
		("¹" "sup1")
		("º" "ordm")
		("»" "raquo")
		("¼" "frac14")
		("½" "frac12")
		("¾" "frac34")
		("¿" "iquest")
		("À" "Agrave")
		("Á" "Aacute")
		("Â" "Acirc")
		("Ã" "Atilde")
		("Ä" "Auml")
		("⋅" "sdot")
		("Æ" "AElig")
		("Ç" "Ccedil")
		("È" "Egrave")
		("É" "Eacute")
		("Ê" "Ecirc")
		("Ë" "Euml")
		("Ì" "Igrave")
		("Í" "Iacute")
		("Î" "Icirc")
		("Ï" "Iuml")
		("Ð" "ETH")
		("Ñ" "Ntilde")
		("Ò" "Ograve")
		("Ó" "Oacute")
		("Ô" "Ocirc")
		("Õ" "Otilde")
		("Ö" "Ouml")
		("×" "times")
		("Ø" "Oslash")
		("Ù" "Ugrave")
		("Ú" "Uacute")
		("Û" "Ucirc")
		("Ü" "Uuml")
		("Ý" "Yacute")
		("Þ" "THORN")
		("ß" "szlig")
		("à" "agrave")
		("á" "aacute")
		("â" "acirc")
		("ã" "atilde")
		("ä" "auml")
		("å" "aring")
		("æ" "aelig")
		("ç" "ccedil")
		("è" "egrave")
		("é" "eacute")
		("ê" "ecirc")
		("ë" "euml")
		("ì" "igrave")
		("í" "iacute")
		("î" "icirc")
		("ï" "iuml")
		("ð" "eth")
		("ñ" "ntilde")
		("ò" "ograve")
		("ó" "oacute")
		("ô" "ocirc")
		("õ" "otilde")
		("ö" "ouml")
		("÷" "divide")
		("ø" "oslash")
		("ù" "ugrave")
		("ú" "uacute")
		("û" "ucirc")
		("ü" "uuml")
		("ý" "yacute")
		("þ" "thorn")
		("ÿ" "yuml")
		("¬" "not")
		("•" "bull")
		("⌈" "lceil")
		("⌉" "rceil")
		("⌊" "lfloor")
		("⌋" "rfloor")
		("ℑ" "image")
		("℘" "weierp")
		("ℜ" "real")
		("™" "trade")
		("〈" "lang")
		("〉" "rang")
		("ƒ" "fnof")
		("ℵ" "alefsym")
		(" " "ensp")
		("ˆ" "circ")
		("Œ" "OElig")
		("œ" "oelig")
		("Š" "Scaron")
		("š" "scaron")
		("Α" "Alpha")
;;		("<" "lt")
		("→" "rarr")
		("↓" "darr")
		("‾" "oline")
		("Ÿ" "Yuml")
		("Δ" "Delta")
		("…" "hellip")
		("←" "larr")
		("↑" "uarr")
		("Β" "Beta")
		("Γ" "Gamma")
		("↔" "harr")
		("Ε" "Epsilon")
		("Ζ" "Zeta")
		("Η" "Eta")
		("Θ" "Theta")
		("Ι" "Iota")
		("Κ" "Kappa")
		("Λ" "Lambda")
		("Μ" "Mu")
		("Ν" "Nu")
		("Ξ" "Xi")
		("Ο" "Omicron")
		("Π" "Pi")
		("Ρ" "Rho")
		("Σ" "Sigma")
		("Τ" "Tau")
		("Υ" "Upsilon")
		("Φ" "Phi")
		("Χ" "Chi")
		("Ψ" "Psi")
		("Ω" "Omega")
		("⇒" "rArr")
		("α" "alpha")
		("β" "beta")
		("γ" "gamma")
		("δ" "delta")
		("ε" "epsilon")
		("ζ" "zeta")
		("η" "eta")
		("θ" "theta")
		("ι" "iota")
		("κ" "kappa")
		("λ" "lambda")
		("μ" "mu")
		("ν" "nu")
		("ξ" "xi")
		("ο" "omicron")
		("π" "pi")
		("ρ" "rho")
		("ς" "sigmaf")
		("σ" "sigma")
		("τ" "tau")
		("υ" "upsilon")
		("φ" "phi")
		("χ" "chi")
		("ψ" "psi")
		("ω" "omega")
		("◊" "loz")
		("⇐" "lArr")
		("ϑ" "thetasym")
		("ϒ" "upsih")
		("⇓" "dArr")
		("⇔" "hArr")
		("ϖ" "piv")
		("¥" "yen")
		("⇑" "uArr")
		("˜" "tilde")
		("†" "dagger")))

(defun replace-unicode-chars-with-html-entities ()
  "Naively replace Unicode with HTML entity."
  (interactive)
  (loop for pair in html-ent-alist do
        (beginning-of-buffer)  ; Otherwise it resumes from pos of last replacement.
        (replace-string (car pair) (format "&%s;" (cadr pair)))))
;; Issues
;; It replaces stuff that's part of HTML markup, like lt and gt signs.
;; It sabotages itself by escaping the ampersands at the beginning of
;; the escapes.
;; Solved both by commenting anything also in ASCII out of html-ent-alist.

(defun replace-html-entities-with-unicode-chars ()
  "Naively replace HTML entities with Unicode."
  (interactive)
  (loop for pair in html-ent-alist do
        (beginning-of-buffer)
        (replace-string (format "&%s;" (cadr pair)) (car pair))))
