import sys
import random

def generate_deck():
    cards = []
    for i in range(1, 14):
        cards.extend([i] * 4)
    random.shuffle(cards)
    return cards

def choose_pile(card, piles):
    """
    Choose a pile in which to place the next card.
    Return None if none possible.
    """
    for i, val in enumerate(piles):
        if val == card:
            return i
    if 10 <= card <= 13:
        return len(piles) - 1 if piles[-1] is None else None
    elif piles[card-1] is None:
        return card-1
    elif piles[card] is None:
        return card
    else:
        return None
    
def play_game():
    "Return True for win, False for loss."
    deck = generate_deck()
    piles = [None, None, None, None, None,
             None, None, None, None, None]
    discard = 0
    filled = 0
    while discard < 6 and filled < 10:
        next_card = deck.pop()
        where = choose_pile(next_card, piles)
        if where is None:
            discard += 1
        else:
            if piles[where] is None:
                filled += 1
            piles[where] = next_card
        assert discard <= 6 and filled <= 10
#    print(where, " ", piles)
    return True if filled == 10 else False
    
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("python solitaire.py <# of games>")
    else:
        games = int(sys.argv[1])
        wins = 0
        for i in range(games):
            result = play_game()
            if result:
                wins += 1
        print("{0:2}% win rate".format((wins / games) * 100))
