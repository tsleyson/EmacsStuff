package com.trisdan.nasaimageoftheday;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

/**
 * Created by trisdan on 6/2/2015.
 */
public class IotdHandler extends DefaultHandler {
    private String url = "http://www.nasa.gov/rss/dyn/lg_image_of_the_day.rss";
    private boolean inUrl = false;
    private boolean inTitle = false;
    private boolean inDescription = false;
    private boolean inItem = false;
    private boolean inDate = false;
    private Bitmap image = null;
    private String title = null;
    private StringBuffer description = new StringBuffer();
    private String date = null;

    public String getDate() {
        return date;
    }

    public StringBuffer getDescription() {

        return description;
    }

    public String getTitle() {

        return title;
    }

    public Bitmap getImage() {

        return image;
    }

    public void processFeed() {
        try {
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser parser = factory.newSAXParser();
            XMLReader reader = parser.getXMLReader();
            reader.setContentHandler(this);
            InputStream inputStream = new URL(url).openStream();
            reader.parse(new InputSource(inputStream));
        }
        catch (Exception e) {
            // barf
        }
    }

    public Bitmap getBitmap(String url) {
        try {
            HttpURLConnection connection = (HttpURLConnection)(new URL(url).openConnection());
            connection.setDoInput(true);
            connection.connect();
            InputStream input = connection.getInputStream();
            Bitmap bitmap = BitmapFactory.decodeStream(input);
            input.close();
            return bitmap;
        }
        catch (Exception e) {
            return null;
        }
    }

    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
        inUrl = localName.equals("url");

        if (localName.startsWith("item")) {
            inItem = true;
        }
        else if (inItem) {
            inTitle = localName.equals("title");
            inDescription = localName.equals("description");
            inDate = localName.equals("pubDate");
        }

    }

    public void characters(char[] ch, int start, int length) {
        String chars = new String(ch).substring(start, start + length);
        if (inUrl && url == null) { image = getBitmap(chars); }
        if (inTitle && title == null) { title = chars; }
        if (inDescription) { description.append(chars); }
        if (inDate && date == null) { date = chars; }
    }
}
